Hoofdopmerkingen presentatie 20-12-2016:
-gebruik van onrealistisch niveau ruis
-noise estimation bekijken en toepassen (lange baan == nowpsies)
-probleemstelling:
	Het probleem is weinig van toepassing op moderne camera's, zoek naar informatie rond ruisproblemen bij verkeerscamera's ed.
	Verklaar dat het niet eenvoudig is geannoteerde datasets te vinden, en dat er geen gevonden konden worden met het specifieke probleem van deze thesis (CD.net bevat wel nachtvideos, maar deze lijken nog steeds behoorlijk verlicht en zijn meer gefocusd op omgaan met 'flares' door sterk lichtcontrast, zoals vermeld op de website zelf). Er werd wel zelf een dataset geproduceerd binnen het probleemkader, maar hier kon geen grondwaarheid bij gemaakt worden voor een kwantitatieve vergelijking.


TODO
----
Datacalculatie:
+data verwerken in grafieken
	-wat hoe tonen?
		-ranking (bars) per methode
			-per dataset (enkel bepaalde?)
			-gemiddeld
-grafieken voor eigen parameters maken
	+eval adaptatie: voor fbof met variërende parameters Recall en FPR berekenen
		-verschillende iteraties doen: telkens kleinere precisie tot weinig variatie meer
			-begin met 1 iteratie per parameter en zie of een parameter een andere beïnvloed
	-roc curves maken adhv Recall en FPR (Wikipedia)

Boek:
-algoritme implementatie beschrijven
	-parameters BgSeg & OptFlo verklaren
		(onderzoek kort welk effect de parameter heeft en welke waarde best past bij zwart-wit, donkere beelden)
	-is alles reproduceerbaar?
-probleemstelling beter uitwerken zodat probleem reël overkomt
-problemen met datasets beter uitleggen
	-weinig ruis, mogelijk verlaagde resolutie (bron van videos?)
	-meer van toepassing op goedkope of oude camera's > verkeerscamera's
		-zoek data rond gebruikte camera's en kwaliteit (CMOS? = goedkoper,gevoeliger aan ruis)
	-probleem aangetoond met video van oude webcam
		> video overdag maken, verschil aantonen
			> id straat, hoeft enkel ter vergelijking van kwaliteit te zijn
-state of the art bespreken
-resultaten bespreken
	-verschillen (beter/slechter) met andere state-of-the-art aantonen en uitleggen
	-EFIC op kleurwaarden: Ik vermoed dat het resultaat bij omzetting naar grijswaarden iets minder zou zijn,
		al verwacht ik ook geen significante verschillen omwille van volgende 2 redenen:
		-Mijn methode combineert een kleurgebaseerd masker met een randgebaseerd masker.
		De randgebaseerde methode voorziet hierbij intern ook in een omzetting naar grijswaarden.
		-In het kleurgebaseerd masker zullen de verschillen ook eerder klein zijn, gezien de aard van
		de video's. Ik vermoed namelijk dat de segmentatie eerder een verschil in intensiteit zal opmerken
		dan in kleurtint. De achtergrond is vaak een donkere straat of net heldere sneeuw of straatverlichting,
		en geen groene omgeving bijvoorbeeld.
-ruis estimatie bespreken?
	-> toepassen op zelf gemaakte video en zo duiden welke niveau en type ruis aangepakt moet worden
	-> video grondig ontruizen, waarna ruis=orig-ontruisd en ruis invoegen aan geannoteerde dataset
-remaining problems & future work:
	- improvement on morphological reconstruction: using optical flow vectors on entire frame
		>> expand on pixel having a motion vector similar to the REGULARISED vector
			- expanding on pixels having similar vector to vector of current pixel performs bad here because the iteratively similar vectors gradually deviated from the intented correct vector which is originally expanded from.
	-smaller movements are not always detected and object shapes are often irregular in time
		=> pass regularized motion vectors & motion compensated motion mask to use temporal redundancy
			*pass previous regularized motion vectors to optical flow algorithm
			*bitwise_or add motion compensated motion mask to MR mask ==> did not work, left trail
	-double images == no movement
		=> if optical flow empty, do motionMask = AND(fgMask,previous motCompMask)
-short abstract (<-> extended abstract?)
-inleiding
-besluit
-dankwoord
-...

09/01
-----
-HDD intensieve taken:
	-efic eval(calc) runnen (bezig)

-app schrijven die poisson noise toevoegt >> Matlab (Windows installatie of Athena) >> J = imnoise(I,'poisson')
-roc curves fbof parameters
	-grafieken maken
-noise en probleem duiding in background
	-noise beter uitschrijven (read & shot noise)
		->Poisson + Gaussiaanse verdeling
	-duiden naar goedkope hardware, minder van toepassing op moderne camera's (software correctie)
		-> CMOS : goedkoopste, maar lagere kwaliteit en gevoeliger voor ruis
		-> verkeerscamera's, voorbeeld trafficland.com
	-...
-problem statement aanpassen
-related work
	-efic
	-lobster
	-subsense
	-vibe
-data tabellen en grafieken maken => tonen wat je gedaan hebt
-gedane werk?
	-literatuurstudie (zie read & shot noise)
	-teststructuur opgezet
	-algoritme ontwikkeld
	-evaluatiestructuur opgezet
	-data verwerkt (tabellen & grafieken)
	-resultaten verwerkt
-future work